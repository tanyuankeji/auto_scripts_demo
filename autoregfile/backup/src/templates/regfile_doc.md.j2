{# Markdown文档模板 #}
# {{ module_name }} 寄存器文件说明文档

*生成时间: {{ timestamp }}*

## 基本信息

| 参数 | 值 |
|------|-----|
| 模块名称 | {{ module_name }} |
| 数据位宽 | {{ data_width }} 位 |
| 地址位宽 | {{ addr_width }} 位 |
| 写端口数量 | {{ num_write_ports }} |
| 读端口数量 | {{ num_read_ports }} |
| 字节使能 | {{ "是" if byte_enable else "否" }} |
| 复位类型 | {{ "同步复位" if sync_reset else "异步复位" }} |

## 寄存器列表

{% if registers %}
| 寄存器名称 | 地址 | 类型 | 描述 |
|-----------|------|------|------|
{% for reg in registers %}
| {{ reg.name }} | 0x{{ '%X' % reg.address|int(0) }} | {{ reg.type }} | {{ reg.description }} |
{% endfor %}
{% else %}
未定义特定寄存器，使用通用寄存器阵列。
{% endif %}

## 寄存器详细说明

{% if registers %}
{% for reg in registers %}
### {{ reg.name }} ({{ reg.type }})

**地址**: 0x{{ '%X' % reg.address|int(0) }}

**描述**: {{ reg.description }}

**复位值**: {{ reg.reset_value|default('0x0') }}

{% if reg.type == 'ReadWrite' %}
**访问类型**: 读/写
{% elif reg.type == 'ReadOnly' %}
**访问类型**: 只读
{% elif reg.type == 'WriteOnly' %}
**访问类型**: 只写
{% elif reg.type in ['ReadClean', 'WriteReadClean'] %}
**访问类型**: 读清零
{% elif reg.type in ['ReadSet', 'WriteReadSet'] %}
**访问类型**: 读置位
{% elif reg.type == 'WriteOnce' %}
**访问类型**: 只写一次
{% elif reg.type in ['Write1Clean', 'Write0Clean'] %}
**访问类型**: 写清零
{% elif reg.type in ['Write1Set', 'Write0Set'] %}
**访问类型**: 写置位
{% else %}
**访问类型**: {{ reg.type }}
{% endif %}

{% if fields is defined %}
**位域定义**:

| 位域 | 位宽 | 类型 | 描述 |
|------|------|------|------|
{% for field in fields %}
{% if field.register == reg.name %}
{% if ':' in field.bit_range %}
{% set start, end = field.bit_range.split(':') %}
| {{ field.name }} | {{ (int(start) - int(end) + 1) }} | {{ field.type }} | {{ field.description }} |
{% else %}
| {{ field.name }} | 1 | {{ field.type }} | {{ field.description }} |
{% endif %}
{% endif %}
{% endfor %}
{% endif %}

{% endfor %}
{% endif %}

## 接口说明

### 时钟与复位

- `clk`: 时钟信号
- `rst_n`: {{ "同步低电平复位" if sync_reset else "异步低电平复位" }}

### 写接口
{% for i in range(num_write_ports) %}
#### 写端口 {{ i }}

- `wr_en_{{ i }}`: 写使能信号
- `wr_addr_{{ i }}`: {{ addr_width }}位写地址
- `wr_data_{{ i }}`: {{ data_width }}位写数据
{% if byte_enable %}
- `wr_be_{{ i }}`: {{ data_width//8 }}位字节使能
{% endif %}
{% endfor %}

### 读接口
{% for i in range(num_read_ports) %}
#### 读端口 {{ i }}

- `rd_addr_{{ i }}`: {{ addr_width }}位读地址
- `rd_data_{{ i }}`: {{ data_width }}位读数据
{% endfor %}

## 寄存器类型说明

- **ReadWrite**: 标准读写寄存器
- **ReadOnly**: 只读寄存器，忽略写操作
- **WriteOnly**: 只写寄存器，读取时返回0
- **ReadClean**: 读取后自动清零的寄存器
- **ReadSet**: 读取后自动置位的寄存器
- **WriteOnce**: 只写一次寄存器，写入后不可再修改
- **Write1Clean**: 写1清零对应位，可读
- **Write1Set**: 写1置位对应位，可读 