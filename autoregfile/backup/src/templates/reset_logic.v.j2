{# 复位逻辑模板 #}
// 复位逻辑
always @({{ 'posedge clk' if sync_reset else 'posedge clk or negedge rst_n' }}) begin
    if ({{ 'rst_n == 1\'b0' if sync_reset else '!rst_n' }}) begin
{% if registers %}
    {% for reg in registers %}
        {{ reg.name|lower }}_reg <= {{ reg.width|default(data_width) }}'{{ 'h' if reg.reset_value|string|startswith('0x') else 'd' }}{{ reg.reset_value|string|replace('0x', '') }};
        {% if reg.type in ['WriteOnce', 'WriteOnlyOnce'] %}
        {{ reg.name|lower }}_written <= 1'b0;
        {% endif %}
    {% endfor %}
{% else %}
        integer i;
        for (i = 0; i < {{ 2**addr_width }}; i = i + 1) begin
            reg_array[i] <= {{ data_width }}'d{{ reset_value }};
        end
{% endif %}
    end
    else begin
    end
end 