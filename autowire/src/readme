# script

## auto_wire serises

### auto_wire_v0

能简单识别未定义的verilog,sverilog的信号名
正则表达式过滤信号
VERILOG_KEYWORD集合识别关键字

### auto_wire_v1

**提取模块名**
加入module后的模块识别

### auto_wire_v2.

**提取模块例化信号**
**提取接口信号**
加入例化的模块识别

### auto_wire_v3

对v2版本的问题优化了，v2有问题
v2无法正确识别例化模块,修复了bug

### auto_wire_v4

将使用set实现信号字符串，信号排序根据信号名排序（无序）
修改为list实现有序，保持元素的插入顺序

### auto_wire_v5

修改之前版本的bug
增加了1'b1, input [1:0] signals, 例化信号带传参的信号
**NOTE**
    # 先根据re匹配的多维数据转换为同维数据
    # 再通过np.concatenate()转换为一维数据
    signals_width = [item for sublist in signals_width for item in sublist]
    signals_width = np.concatenate(signals_width)
**问题**
    parameter定义的信号目前不能识别
    目前信号的顺序依然不够有序，并且list有很多重复和空的元素
    生成的wire没有**位宽**


| 基本信号检测 | 检测未定义的信号并生成wire声明 | python auto_wire.py design.v | | 位宽推断 | 尝试从代码中推断信号位宽 | python auto_wire.py --width design.v | | 默认位宽 | 为无法推断位宽的信号设置默认位宽 | python auto_wire.py --default-width "[7:0]" design.v| | 追加到文件 | 将生成的声明追加到原始文件中 | python auto_wire.py --append design.v | | 指定输出目录 | 将生成的声明输出到指定目录 | python auto_wire.py --output-dir ./gen design.v | | 详细信息 | 显示详细处理信息 | python auto_wire.py --verbose design.v | | 帮助信息 | 显示详细使用说明 | python auto_wire.py --help-detail |